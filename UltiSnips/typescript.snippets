# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

snippet st "statement" b
${1};
endsnippet

snippet cst "const statement" b
const ${1} = ${2};
endsnippet

snippet lst "let statement" b
let ${1} = ${2};
endsnippet

snippet slc "redux toolkit slice" b
import { createSlice } from '@reduxjs/toolkit'
import type { PayloadAction } from '@reduxjs/toolkit'

interface ${1} {
	${2}
}

const initialState = { value: 0 } as ${1}

const `!p snip.rv = snip.basename`${3}Slice = createSlice({
	name: '${4}',
	initialState,
	reducers: {
		${5}(state, ${6}) {
			${7}
		},
	},
})


export const { ${5} } = `!p snip.rv = snip.basename`${3}Slice.actions
export default `!p snip.rv = snip.basename`${3}Slice.reducer
endsnippet
